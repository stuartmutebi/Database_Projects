generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model asset_valuation {
  valuation_id   Int       @id @default(autoincrement())
  asset_id       Int
  valuation_date DateTime? @db.Date
  method         String?
  initial_value  Decimal?  @db.Decimal(12, 2)
  current_value  Decimal?  @db.Decimal(12, 2)
  assets         assets    @relation(fields: [asset_id], references: [asset_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_val_asset")

  @@index([asset_id], map: "idx_val_asset")
}

model assets {
  asset_id        Int               @id @default(autoincrement())
  asset_name      String
  category_id     Int?
  purchase_date   DateTime?         @db.Date
  purchase_cost   Decimal?          @db.Decimal(12, 2)
  status          String?
  location_id     Int?
  warranty_expiry DateTime?         @db.Date
  supplier_id     Int?
  serial_number   String?
  asset_valuation asset_valuation[]
  categories      categories?       @relation(fields: [category_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_assets_category")
  locations       locations?        @relation(fields: [location_id], references: [location_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_assets_location")
  suppliers       suppliers?        @relation(fields: [supplier_id], references: [supplier_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_assets_supplier")
  assignments     assignments[]
  disposals       disposals[]
  maintenance     maintenance[]

  @@index([category_id], map: "idx_assets_category")
  @@index([location_id], map: "idx_assets_location")
  @@index([supplier_id], map: "idx_assets_supplier")
}

model assignments {
  assignment_id Int       @id @default(autoincrement())
  asset_id      Int
  user_id       Int
  assigned_date DateTime? @db.Date
  return_date   DateTime? @db.Date
  status        String?
  description   String?
  approved_by   String?
  assets        assets    @relation(fields: [asset_id], references: [asset_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_assign_asset")
  users         users     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_assign_user")

  @@index([asset_id], map: "idx_assign_asset")
  @@index([user_id], map: "idx_assign_user")
}

model buyers {
  buyer_id  Int         @id @default(autoincrement())
  name      String
  phone     String?
  email     String?
  address   String?
  tin       String?
  disposals disposals[]
}

model categories {
  category_id   Int       @id @default(autoincrement())
  category_name String
  description   String?
  category_type String?
  created_at    DateTime?
  updated_at    DateTime?
  assets        assets[]
}

model disposals {
  disposal_id    Int       @id @default(autoincrement())
  asset_id       Int
  disposal_date  DateTime? @db.Date
  disposal_value Decimal?  @db.Decimal(12, 2)
  buyer_id       Int?
  reason         String?
  assets         assets    @relation(fields: [asset_id], references: [asset_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_disposal_asset")
  buyers         buyers?   @relation(fields: [buyer_id], references: [buyer_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_disposal_buyer")

  @@index([asset_id], map: "idx_disposal_asset")
  @@index([buyer_id], map: "idx_disposal_buyer")
}

model locations {
  location_id           Int      @id @default(autoincrement())
  building              String?
  postal_address        String?
  geographical_location String?
  assets                assets[]
}

model maintenance {
  maintenance_id    Int                @id @default(autoincrement())
  asset_id          Int
  maintenance_date  DateTime?          @db.Date
  description       String?
  cost              Decimal?           @db.Decimal(12, 2)
  staff_id          Int?
  performed_by      String?
  assets            assets             @relation(fields: [asset_id], references: [asset_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_maint_asset")
  maintenance_staff maintenance_staff? @relation(fields: [staff_id], references: [m_staff_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_maint_staff")

  @@index([asset_id], map: "idx_maint_asset")
  @@index([staff_id], map: "idx_maint_staff")
}

model maintenance_staff {
  m_staff_id     Int           @id @default(autoincrement())
  name           String
  phone          String?
  email          String?
  specialization String?
  maintenance    maintenance[]
}

model suppliers {
  supplier_id Int      @id @default(autoincrement())
  name        String
  phone       String?
  email       String?
  address     String?
  assets      assets[]
}

model users {
  user_id     Int           @id @default(autoincrement())
  name        String
  department  String?
  occupation  String?
  email       String?
  phone       String?
  nin         String?
  status      String?
  assignments assignments[]
}
